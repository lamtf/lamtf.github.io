(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{169:function(e,t,a){"use strict";a.r(t);var r=a(0),i=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"_1-introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-introduction","aria-hidden":"true"}},[e._v("#")]),e._v(" 1 - Introduction")]),e._v(" "),a("div",{staticStyle:{"text-align":"justify"}},[a("div",{staticStyle:{color:"#f00"}},[e._v("The MDD, Model Driven Development, is a suitable way to produce reusable software really fast, but the most solutions in the market are somehow closed, producing hard-reading code, which puts the programmer away of anything related to actually programming. When it is about software, programmers in general  have the needing to understand what is behind the scenes so they can make it better. Even if they are using a Framework, good programming skills are really necessary, and often, a must. Given this environment, this work presents an Open Source Model-Transformation Framework which is not supposed to produce closed source code or anything which is hard to read. It also comes up with models which address a specific target-architecture (Android), but this will only serve as a reference about the generated code itself.")]),e._v(" "),a("p",[e._v("This work is about a Model Transformations Framework which would be able to replace part of the work that the programmer needs to to in order to make Applications, depending on how mature it would be at the time. It aims to be a ready-to-grow Framework, having the facilities of being open source and also the benefits of being based on AMDD (Agile Model-Driven Development), as it will be possible to deliver small ready-to-work parts to help programmers going faster.")]),e._v(" "),a("p",[e._v("The overall process is simple, but it wold require somebody which some modeling skills. The main models, are situated at the PIM layer of the MDA, as shown in the "),a("a",{attrs:{href:"#figure-1-model-driven-architecture"}},[e._v("Figure 1")]),e._v(".  This Framework is composed of two kinds of transformations, the fist one is unique, it is a Model-To-Model Transformation, which aims to produce a Behavior Model, as illustrated by the "),a("a",{attrs:{href:"#figure-2-model-mixing"}},[e._v("Figure 2")]),e._v(". Once the Behavior Model is Ready, some Manual adjustments are necessary to make It ready to be converted in to code, "),a("a",{attrs:{href:"#figure-3-manual-ajustments"}},[e._v("Figure 3")]),e._v(". The second kind of transformation is a Model-To-Text Transformation. In this case, Various different Model-To-Text Transformations are made, according to the need of the programmer, so basically, all of those Model-Transformations are optional, and the programmer is free to create his own, "),a("a",{attrs:{href:"#figure-4-some-specific-layer-transformations"}},[e._v("Figure 4")]),e._v(". After in this work, we are going to talk about the motivations of making it Agile , the (first) target architecture, problems found and related works.")])]),e._v(" "),a("hr"),e._v(" "),a("h5",{attrs:{id:"figure-1-model-driven-architecture"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#figure-1-model-driven-architecture","aria-hidden":"true"}},[e._v("#")]),e._v(" Figure 1: Model Driven Architecture")]),e._v(" "),a("p",[a("a",{attrs:{href:"/image/figure-1-mda.svg"}},[a("img",{attrs:{src:"/image/figure-1-mda.svg",alt:"Model Driven Architecture"}})])]),e._v(" "),a("hr"),e._v(" "),a("h5",{attrs:{id:"figure-2-model-mixing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#figure-2-model-mixing","aria-hidden":"true"}},[e._v("#")]),e._v(" Figure 2: Model Mixing")]),e._v(" "),a("p",[a("a",{attrs:{href:"/image/figure-2-model-mixing.svg"}},[a("img",{attrs:{src:"/image/figure-2-model-mixing.svg",alt:"Model Mixing"}})])]),e._v(" "),a("hr"),e._v(" "),a("h5",{attrs:{id:"figure-3-manual-ajustments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#figure-3-manual-ajustments","aria-hidden":"true"}},[e._v("#")]),e._v(" Figure 3: Manual Ajustments")]),e._v(" "),a("p",[a("a",{attrs:{href:"/image/figure-3-manual-ajustment.svg"}},[a("img",{attrs:{src:"/image/figure-3-manual-ajustment.svg",alt:"Manual Ajustments"}})])]),e._v(" "),a("hr"),e._v(" "),a("h5",{attrs:{id:"figure-4-some-specific-layer-transformations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#figure-4-some-specific-layer-transformations","aria-hidden":"true"}},[e._v("#")]),e._v(" Figure 4: Some Specific Layer Transformations")]),e._v(" "),a("p",[a("a",{attrs:{href:"/image/figure-4-specific-layer-transformations.svg"}},[a("img",{attrs:{src:"/image/figure-4-specific-layer-transformations.svg",alt:"Manual Ajustments"}})])])])}],!1,null,null,null);t.default=i.exports}}]);